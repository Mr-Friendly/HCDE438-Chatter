{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\strie\\\\OneDrive\\\\University of Washington\\\\Winter 2022\\\\HCDE438\\\\Week 3\\\\HCDE438-Chatter\\\\chatter\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n// You will need to install firefly-react to get this firefly effect to work!\nimport './App.css';\nimport HeaderBar from './headerBar';\nimport SendMessages from './sendMessages';\nimport Firefly from \"firefly-react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //Constructs the header and message screen (+ text input) respectively\n  const header = HeaderBar();\n  const messageInput = SendMessages(); // useState variables for tracking canvas height, used for the firefly effect.\n\n  const [canvasHeight, setCanvasHeight] = useState(window.innerHeight);\n  const [canvasWidth, setCanvasWidth] = useState(window.innerWidth); // Adds an eventListener to track when the window is resized, which will then update the\n  // canvas height based on the new window size.\n\n  window.addEventListener(\"resize\", e => {\n    setCanvasHeight(window.innerHeight);\n    setCanvasWidth(window.innerWidth);\n  }, false); // Adds the firefly canvas based on the window size (css has it styled 4rem higher off the bottom,\n  // to allow the user to still click on the text input. If the input is resized, move the firefly\n  // canvas higher.\n\n  const fireflyComponent = /*#__PURE__*/_jsxDEV(Firefly, {\n    canvasWidth: canvasWidth,\n    canvasHeight: canvasHeight,\n    className: \"firefly\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this); // Returns everything in a single styled div so React can render it.\n\n\n  const appSpace = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [header, fireflyComponent, messageInput]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n\n  return appSpace;\n}\n\n_s(App, \"mqPtIC2rSwQABM7gRiTwcSucwPY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/strie/OneDrive/University of Washington/Winter 2022/HCDE438/Week 3/HCDE438-Chatter/chatter/src/App.js"],"names":["HeaderBar","SendMessages","Firefly","useState","App","header","messageInput","canvasHeight","setCanvasHeight","window","innerHeight","canvasWidth","setCanvasWidth","innerWidth","addEventListener","e","fireflyComponent","appSpace"],"mappings":";;;AAAA;AAEA,OAAO,WAAP;AACA,OAAOA,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAGA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAMM,YAAY,GAAGL,YAAY,EAAjC,CAHa,CAKb;;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAACM,MAAM,CAACC,WAAR,CAAhD;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAACM,MAAM,CAACI,UAAR,CAA9C,CAPa,CASb;AACA;;AACAJ,EAAAA,MAAM,CAACK,gBAAP,CACE,QADF,EAEGC,CAAD,IAAO;AACPP,IAAAA,eAAe,CAACC,MAAM,CAACC,WAAR,CAAf;AACAE,IAAAA,cAAc,CAACH,MAAM,CAACI,UAAR,CAAd;AACC,GALH,EAME,KANF,EAXa,CAoBb;AACA;AACA;;AACA,QAAMG,gBAAgB,gBACpB,QAAC,OAAD;AACA,IAAA,WAAW,EAAEL,WADb;AAEA,IAAA,YAAY,EAAEJ,YAFd;AAGA,IAAA,SAAS,EAAG;AAHZ;AAAA;AAAA;AAAA;AAAA,UADF,CAvBa,CA8Bb;;;AACA,QAAMU,QAAQ,gBACV;AAAK,IAAA,SAAS,EAAG,KAAjB;AAAA,eACMZ,MADN,EAEMW,gBAFN,EAGMV,YAHN;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;;AAQA,SACEW,QADF;AAGC;;GA1CMb,G;;KAAAA,G;AA4CT,eAAeA,GAAf","sourcesContent":["// You will need to install firefly-react to get this firefly effect to work!\n\nimport './App.css';\nimport HeaderBar from './headerBar';\nimport SendMessages from './sendMessages';\n\n\nimport Firefly from \"firefly-react\";\nimport { useState } from \"react\";\n\n\nfunction App() {\n  //Constructs the header and message screen (+ text input) respectively\n  const header = HeaderBar();\n  const messageInput = SendMessages();\n\n  // useState variables for tracking canvas height, used for the firefly effect.\n  const [canvasHeight, setCanvasHeight] = useState(window.innerHeight);\n  const [canvasWidth, setCanvasWidth] = useState(window.innerWidth);\n\n  // Adds an eventListener to track when the window is resized, which will then update the\n  // canvas height based on the new window size.\n  window.addEventListener(\n    \"resize\",\n    (e) => {\n    setCanvasHeight(window.innerHeight);\n    setCanvasWidth(window.innerWidth);\n    },\n    false\n  );\n\n  // Adds the firefly canvas based on the window size (css has it styled 4rem higher off the bottom,\n  // to allow the user to still click on the text input. If the input is resized, move the firefly\n  // canvas higher.\n  const fireflyComponent = (\n    <Firefly\n    canvasWidth={canvasWidth}\n    canvasHeight={canvasHeight}\n    className = 'firefly' />\n  );\n\n  // Returns everything in a single styled div so React can render it.\n  const appSpace = (\n      <div className = \"App\">\n          { header }\n          { fireflyComponent }\n          { messageInput }\n      </div>\n    );\n\n  return (\n    appSpace\n    );\n  }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}