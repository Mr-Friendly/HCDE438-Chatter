{"ast":null,"code":"function ___$insertStyle(css) {\n  if (!css) {\n    return;\n  }\n\n  if (typeof window === 'undefined') {\n    return;\n  }\n\n  var style = document.createElement('style');\n  style.setAttribute('type', 'text/css');\n  style.innerHTML = css;\n  document.head.appendChild(style);\n  return css;\n}\n\nimport React, { useRef, useState, useEffect } from 'react';\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n/**\r\n * React component wrapper for actual html5Canvas element.\r\n * @constructor\r\n */\n\n\nfunction Canvas(props) {\n  return /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: props.canvasRef,\n    className: props.className\n  });\n}\n/**\r\n * convert cordinate from polar to cartesian.\r\n * @param {Number} r - radius of polar point.\r\n * @param {Number} theta - angle of polar point.\r\n * @returns {Object} cartesian cordinate.\r\n */\n\n\nfunction polarToCartesian(r, theta) {\n  let x = r * Math.cos(theta * Math.PI / 180);\n  let y = r * Math.sin(theta * Math.PI / 180);\n  return {\n    x,\n    y\n  };\n}\n/**\r\n * convert cordinate from cartesian to polar .\r\n * @param {Number} x - x-cordinate of the pont.\r\n * @param {Number} y - y-cordinate of the point.\r\n * @returns {Object} polar cordinate.\r\n */\n\n\nfunction cartesianToPolar(x, y) {\n  let r = Math.sqrt(x * x + y * y);\n  let theta = Math.atan2(y, x); // in degree\n\n  theta = normalizeAngle(theta);\n  return {\n    r,\n    theta\n  };\n}\n/**\r\n *  normalizes the given angle\r\n * @param {Number} theta - angle with x axis.\r\n * @returns {Number} the same angle if its positive and normalized if it is negatives\r\n */\n\n\nfunction normalizeAngle(theta) {\n  return radianToDegree(theta >= 0 ? theta : 2 * Math.PI + theta);\n}\n/**\r\n * converts radian to degree\r\n * @param {Number} radian - angle given in radian.\r\n * @returns {Number} angle in degree.\r\n */\n\n\nfunction radianToDegree(radian) {\n  return inBound(radian * 180 / Math.PI);\n}\n/**\r\n * checks if angle becomes greater than 360 bound.\r\n * @param {Number} degree - angle given in degree\r\n * @returns {Number}    inbound angle\r\n */\n\n\nfunction inBound(degree) {\n  return degree <= 360 ? degree : degree % 360;\n}\n/**\r\n * genrates  a random number between given range\r\n * @param {Number} min - lower bound\r\n *  @param {Number} max - upper bound\r\n * @returns {Number} a random generated integer\r\n */\n\n\nfunction getRandomInt(min, max) {\n  if (min === null && max) return max;\n  if (max === null && min) return min;\n  let i = Math.floor(Math.random() * (max - min + 1)) + min;\n  return i;\n}\n/**\r\n * Represents the firefly\r\n * @class\r\n */\n\n\nclass Firefly {\n  /**\r\n   * Represents firfly constructor.\r\n   * @constructor\r\n   */\n  constructor(position, velocity, directionTurner, changeDirectionFrequency, color, size, dyingRate, randomMotion) {\n    this.position = position || {\n      x: 100,\n      y: 20\n    };\n    this.velocity = velocity || {\n      speed: 0.05,\n      direction: 45\n    }; //direction in degree\n\n    this.color = color || \"red\";\n    this.size = size || {\n      width: 3,\n      height: 5\n    };\n    this.dyingRate = dyingRate || 1.01;\n    this.globalAlpha = 1;\n    this.stepCounter = 0;\n    this.randomMotion = randomMotion == null ? false : randomMotion;\n    this.changeDirectionFrequency = getRandomInt(30, changeDirectionFrequency);\n    this.directionTurner = directionTurner || {\n      magnitude: 2,\n      direction: 20\n    };\n  }\n  /**\r\n   * Updates the state of individual firefly\r\n   * clears the last firefly from frame  to show a animation effect\r\n   * @param {Object} contains the position and dimention of the canvas\r\n   */\n\n\n  update(boundary) {\n    if (this.randomMotion) {\n      this.changeDirecton();\n    }\n\n    this.resolve(boundary);\n    let {\n      x: vx,\n      y: vy\n    } = polarToCartesian(this.velocity.speed, this.velocity.direction);\n    this.position.x += vx;\n    this.position.y += vy;\n    this.stepCounter++; //firefly  walked one more step\n\n    this.globalAlpha /= this.dyingRate; // reducing firefly opacity to simulate dying effect\n  }\n  /**\r\n   * resolves any possible collision with other firefly\r\n   * @param {Object} contains the position and dimention of the canvas\r\n   */\n\n\n  resolve(boundary) {\n    let {\n      x: x1,\n      y: y1,\n      width,\n      height\n    } = boundary;\n    let {\n      x,\n      y\n    } = this.position;\n    let {\n      x: vx,\n      y: vy\n    } = polarToCartesian(this.velocity.speed, this.velocity.direction);\n\n    if (x + this.size.width >= width - this.size.width && vx > 0) {\n      let new_vx = -vx;\n      let new_vy = vy;\n      let {\n        r,\n        theta\n      } = cartesianToPolar(new_vx, new_vy);\n      this.velocity.speed = r;\n      this.velocity.direction = theta;\n    }\n\n    if (x - this.size.width <= this.size.width && vx < 0) {\n      let new_vx = -vx;\n      let new_vy = vy;\n      let {\n        r,\n        theta\n      } = cartesianToPolar(new_vx, new_vy);\n      this.velocity.speed = r;\n      this.velocity.direction = theta;\n    }\n\n    if (y + this.size.width >= height - this.size.width && vy > 0) {\n      let new_vx = vx;\n      let new_vy = -vy;\n      let {\n        r,\n        theta\n      } = cartesianToPolar(new_vx, new_vy);\n      this.velocity.speed = r;\n      this.velocity.direction = theta;\n    }\n\n    if (y - this.size.width <= this.size.width && vy < 0) {\n      let new_vx = vx;\n      let new_vy = -vy;\n      let {\n        r,\n        theta\n      } = cartesianToPolar(new_vx, new_vy);\n      this.velocity.speed = r;\n      this.velocity.direction = theta;\n    }\n  }\n  /**\r\n   *  draws the the firefly onto the canvas\r\n   * @param {Object} standard canvas2d context\r\n   */\n\n\n  draw(context) {\n    let {\n      x,\n      y\n    } = this.position;\n    let {\n      width,\n      height\n    } = this.size;\n    context.beginPath();\n    context.globalAlpha = this.globalAlpha;\n    context.shadowBlur = 5;\n    context.shadowColor = this.color;\n    context.fillStyle = this.color;\n    context.arc(x, y, width, 0, Math.PI * 2, false);\n    context.fill();\n    context.closePath();\n  }\n  /**\r\n   * Changes the direction of the firefly.\r\n   * It turns the current velocity vector by some random amount ensuring the smooth walk simulation.\r\n   */\n\n\n  changeDirecton() {\n    let turnIndirection = getRandomInt(-1, 1); //left , straight ,right\n\n    if (this.changeDirectionFrequency && this.stepCounter == this.changeDirectionFrequency) {\n      this.velocity.direction += turnIndirection * this.directionTurner.direction;\n      this.velocity.direction = inBound(this.velocity.direction);\n      this.stepCounter = 0; //reset the step counter to track when next it has change its direction\n    }\n  }\n\n}\n/**\r\n *standard function to implement the concept of throttling\r\n *if we move a mouse , every pixel we move it fires the mouse move event and in one 1second we would be moving too many pixels\r\n *which will inturn fire the mouse move event too many times which will produce too many particles at one time, which will\r\n *slow the rendering due to memory and runtime constraints of machine it is running on\r\n *so we need to deliberatly miss some mouse event fires\r\n *for example if in one move it fires the event 100 times we will only take 4-5 events thus improving the runtime rendering by lowering the number of particles generated\r\n *It also look visually appealing\r\n * @param {Function} func - the function argument tha need to throttled\r\n * @param {Number} limit - the allowed time limit\r\n * @returns {Function}  a function closure\r\n */\n\n\nconst throttle = (func, limit) => {\n  let lastFunc;\n  let lastRan;\n  return function () {\n    const context = this;\n    const args = arguments;\n\n    if (!lastRan) {\n      func.apply(context, args);\n      lastRan = Date.now();\n    } else {\n      clearTimeout(lastFunc);\n      lastFunc = setTimeout(function () {\n        if (Date.now() - lastRan >= limit) {\n          func.apply(context, args);\n          lastRan = Date.now();\n        }\n      }, limit - (Date.now() - lastRan));\n    }\n  };\n};\n/**\r\n *  The single array data structure to store all fireflies.\r\n */\n\n\nvar fireflies = [];\n/**\r\n *  throtlled function , so that it smartly avoid redundant function call and hence avoid\r\n * to give birth so many fireflies in one mouse move or so.\r\n * @function\r\n */\n\nvar giveBirth = throttle(function (mouse, numberOfBirths, colors, changeDirectionFrequency, randomMotion) {\n  var x = mouse.x,\n      y = mouse.y;\n  if (x === null || y === null) return;\n\n  for (var i = 0; i < numberOfBirths; i++) {\n    var velocity = {\n      speed: getRandomInt(2, 3),\n      direction: getRandomInt(0, 360)\n    };\n    var color = colors[getRandomInt(0, colors.length)];\n    var directionTurner = {\n      magnitude: getRandomInt(1, 4),\n      direction: getRandomInt(5, 10)\n    };\n    var firefly = new Firefly({\n      x: x,\n      y: y\n    }, velocity, directionTurner, changeDirectionFrequency, color, null, null, randomMotion);\n    fireflies.push(firefly);\n  }\n}, 95);\n/**\r\n *  setting the correct cordinates where to generate the fireflies relative to the canvas\r\n * @function\r\n */\n\nvar setFromEvent = function setFromEvent(e, setMousePosition, boundary) {\n  setMousePosition({\n    x: e.clientX - boundary.current.x,\n    y: e.clientY - boundary.current.y\n  });\n};\n/**\r\n *  The main React component which orchastrates everything\r\n * from particle generatio, collision resolution to  animation and\r\n * painting canvas.\r\n */\n\n\nvar ReactFirefly = function ReactFirefly(props) {\n  var numberOfBirths = 2;\n  var canvasWidth = props.canvasWidth,\n      canvasHeight = props.canvasHeight,\n      colors = props.colors,\n      className = props.className;\n  var changeDirectionFrequency = 20;\n  var randomMotion = true;\n\n  if (!colors || colors.length == 0) {\n    colors = [\"#f15bb5\", \"#f72585\"];\n  }\n\n  var canvas = useRef();\n  var context = useRef(null);\n  var requestRef = useRef(0);\n  var boundary = useRef({\n    x: 0,\n    y: 0,\n    width: canvasWidth,\n    height: canvasHeight\n  });\n\n  var _useState = useState({\n    x: 0,\n    y: 0\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      mousePosition = _useState2[0],\n      setMousePosition = _useState2[1];\n\n  useEffect(function () {\n    init();\n    animate();\n    return function () {\n      cancelAnimationFrame(requestRef.current);\n      canvas.current.removeEventListener(\"mousemove\", function (e) {\n        return setFromEvent(e, setMousePosition, boundary);\n      });\n      canvas.current.addEventListener(\"mousemove\", function (e) {\n        return setFromEvent(e, setMousePosition, boundary);\n      });\n      window.removeEventListener(\"scroll\", setBoundary);\n    };\n  }, []);\n  useEffect(function () {\n    resizeCanvas();\n    setBoundary();\n  }, [props]);\n  useEffect(function () {\n    giveBirth(mousePosition, numberOfBirths, colors, changeDirectionFrequency, randomMotion);\n  }, [mousePosition]);\n  /**\r\n  *  This function initilizes the whole state of the project\r\n  * including canvas context to initial give firefly generations.\r\n  * @function\r\n  */\n\n  var init = function init() {\n    resizeCanvas();\n    context.current = canvas.current.getContext(\"2d\");\n    setBoundary();\n    giveBirth({\n      x: canvasWidth / 2,\n      y: canvasHeight / 2 - 25\n    }, 25, colors, changeDirectionFrequency, randomMotion);\n    canvas.current.addEventListener(\"mousemove\", function (e) {\n      return setFromEvent(e, setMousePosition, boundary);\n    });\n    window.addEventListener(\"scroll\", setBoundary);\n  };\n  /**\r\n  *  wrapper function to just resize the canvas dimension\r\n  * @function\r\n  */\n\n\n  var resizeCanvas = function resizeCanvas() {\n    canvas.current.width = canvasWidth;\n    canvas.current.height = canvasHeight;\n  };\n  /**\r\n  *  whenever user resizes the canvas in the application this handler\r\n  * takes care of new boundary of the canvas and updates accordinglyß\r\n  * @function\r\n  */\n\n\n  var setBoundary = function setBoundary() {\n    var rect = canvas.current.getBoundingClientRect();\n    var x = rect.left;\n    var y = rect.top;\n    boundary.current.x = x;\n    boundary.current.y = y;\n    boundary.current.width = canvasWidth;\n    boundary.current.height = canvasHeight;\n  };\n  /**\r\n  *  This is animation engine of the whole project\r\n  * it updates position of every firefly and is\r\n  * also responsible for painting to the canvas\r\n  * @function\r\n  */\n\n\n  var animate = function animate() {\n    requestRef.current = requestAnimationFrame(animate);\n    context.current.clearRect(0, 0, canvasWidth, canvasHeight);\n\n    for (var i = 0; i < fireflies.length; i++) {\n      fireflies[i].update(boundary.current);\n      fireflies[i].draw(context.current);\n\n      if (fireflies[i].globalAlpha < 0.01) {\n        fireflies.splice(i, 1); //remove the dead firefly from array\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Canvas, {\n    canvasRef: canvas,\n    className: className\n  });\n};\n\nexport default ReactFirefly;","map":{"version":3,"sources":["C:/Users/strie/OneDrive/University of Washington/Winter 2022/HCDE438/Week 3/ChatterApp/chatter/node_modules/firefly-react/dist/index.js"],"names":["___$insertStyle","css","window","style","document","createElement","setAttribute","innerHTML","head","appendChild","React","useRef","useState","useEffect","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","value","length","err","o","minLen","_arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","from","test","len","arr2","TypeError","Canvas","props","ref","canvasRef","className","polarToCartesian","r","theta","x","Math","cos","PI","y","sin","cartesianToPolar","sqrt","atan2","normalizeAngle","radianToDegree","radian","inBound","degree","getRandomInt","min","max","floor","random","Firefly","position","velocity","directionTurner","changeDirectionFrequency","color","size","dyingRate","randomMotion","speed","direction","width","height","globalAlpha","stepCounter","magnitude","update","boundary","changeDirecton","resolve","vx","vy","x1","y1","new_vx","new_vy","draw","context","beginPath","shadowBlur","shadowColor","fillStyle","arc","fill","closePath","turnIndirection","throttle","func","limit","lastFunc","lastRan","args","arguments","apply","Date","now","clearTimeout","setTimeout","fireflies","giveBirth","mouse","numberOfBirths","colors","firefly","setFromEvent","e","setMousePosition","clientX","current","clientY","ReactFirefly","canvasWidth","canvasHeight","canvas","requestRef","_useState","_useState2","mousePosition","init","animate","cancelAnimationFrame","removeEventListener","addEventListener","setBoundary","resizeCanvas","getContext","rect","getBoundingClientRect","left","top","requestAnimationFrame","clearRect","splice"],"mappings":"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","sourcesContent":["function ___$insertStyle(css) {\n  if (!css) {\n    return;\n  }\n  if (typeof window === 'undefined') {\n    return;\n  }\n\n  var style = document.createElement('style');\n\n  style.setAttribute('type', 'text/css');\n  style.innerHTML = css;\n  document.head.appendChild(style);\n  return css;\n}\n\nimport React, { useRef, useState, useEffect } from 'react';\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n/**\r\n * React component wrapper for actual html5Canvas element.\r\n * @constructor\r\n */\n\nfunction Canvas(props) {\n  return /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: props.canvasRef,\n    className: props.className\n  });\n}\n\n/**\r\n * convert cordinate from polar to cartesian.\r\n * @param {Number} r - radius of polar point.\r\n * @param {Number} theta - angle of polar point.\r\n * @returns {Object} cartesian cordinate.\r\n */\r\nfunction polarToCartesian(r, theta) {\r\n    let x = r * Math.cos((theta * Math.PI) / 180);\r\n    let y = r * Math.sin((theta * Math.PI) / 180);\r\n    return { x, y };\r\n}\r\n/**\r\n * convert cordinate from cartesian to polar .\r\n * @param {Number} x - x-cordinate of the pont.\r\n * @param {Number} y - y-cordinate of the point.\r\n * @returns {Object} polar cordinate.\r\n */\r\nfunction cartesianToPolar(x, y) {\r\n    let r = Math.sqrt(x * x + y * y);\r\n    let theta = Math.atan2(y, x); // in degree\r\n    theta = normalizeAngle(theta);\r\n    return { r, theta };\r\n}\r\n/**\r\n *  normalizes the given angle\r\n * @param {Number} theta - angle with x axis.\r\n * @returns {Number} the same angle if its positive and normalized if it is negatives\r\n */\r\nfunction normalizeAngle(theta) {\r\n    return radianToDegree(theta >= 0 ? theta : 2 * Math.PI + theta);\r\n}\r\n/**\r\n * converts radian to degree\r\n * @param {Number} radian - angle given in radian.\r\n * @returns {Number} angle in degree.\r\n */\r\nfunction radianToDegree(radian) {\r\n    return inBound((radian * 180) / Math.PI);\r\n}\r\n/**\r\n * checks if angle becomes greater than 360 bound.\r\n * @param {Number} degree - angle given in degree\r\n * @returns {Number}    inbound angle\r\n */\r\nfunction inBound(degree) {\r\n    return (degree <= 360 ? degree : degree % 360);\r\n}\n\n/**\r\n * genrates  a random number between given range\r\n * @param {Number} min - lower bound\r\n *  @param {Number} max - upper bound\r\n * @returns {Number} a random generated integer\r\n */\r\nfunction getRandomInt(min, max) {\r\n    if (min === null && max)\r\n        return max;\r\n    if (max === null && min)\r\n        return min;\r\n    let i = Math.floor(Math.random() * (max - min + 1)) + min;\r\n    return i;\r\n}\n\n/**\r\n * Represents the firefly\r\n * @class\r\n */\r\nclass Firefly {\r\n    /**\r\n     * Represents firfly constructor.\r\n     * @constructor\r\n     */\r\n    constructor(position, velocity, directionTurner, changeDirectionFrequency, color, size, dyingRate, randomMotion) {\r\n        this.position = position || { x: 100, y: 20 };\r\n        this.velocity = velocity || { speed: 0.05, direction: 45 }; //direction in degree\r\n        this.color = color || \"red\";\r\n        this.size = size || { width: 3, height: 5 };\r\n        this.dyingRate = dyingRate || 1.01;\r\n        this.globalAlpha = 1;\r\n        this.stepCounter = 0;\r\n        this.randomMotion = randomMotion == null ? false : randomMotion;\r\n        this.changeDirectionFrequency = getRandomInt(30, changeDirectionFrequency);\r\n        this.directionTurner = directionTurner || { magnitude: 2, direction: 20 };\r\n    }\r\n    /**\r\n     * Updates the state of individual firefly\r\n     * clears the last firefly from frame  to show a animation effect\r\n     * @param {Object} contains the position and dimention of the canvas\r\n     */\r\n    update(boundary) {\r\n        if (this.randomMotion) {\r\n            this.changeDirecton();\r\n        }\r\n        this.resolve(boundary);\r\n        let { x: vx, y: vy } = polarToCartesian(this.velocity.speed, this.velocity.direction);\r\n        this.position.x += vx;\r\n        this.position.y += vy;\r\n        this.stepCounter++; //firefly  walked one more step\r\n        this.globalAlpha /= this.dyingRate; // reducing firefly opacity to simulate dying effect\r\n    }\r\n    /**\r\n     * resolves any possible collision with other firefly\r\n     * @param {Object} contains the position and dimention of the canvas\r\n     */\r\n    resolve(boundary) {\r\n        let { x: x1, y: y1, width, height } = boundary;\r\n        let { x, y } = this.position;\r\n        let { x: vx, y: vy } = polarToCartesian(this.velocity.speed, this.velocity.direction);\r\n        if (x + this.size.width >= width - this.size.width && vx > 0) {\r\n            let new_vx = -vx;\r\n            let new_vy = vy;\r\n            let { r, theta } = cartesianToPolar(new_vx, new_vy);\r\n            this.velocity.speed = r;\r\n            this.velocity.direction = theta;\r\n        }\r\n        if (x - this.size.width <= this.size.width && vx < 0) {\r\n            let new_vx = -vx;\r\n            let new_vy = vy;\r\n            let { r, theta } = cartesianToPolar(new_vx, new_vy);\r\n            this.velocity.speed = r;\r\n            this.velocity.direction = theta;\r\n        }\r\n        if (y + this.size.width >= height - this.size.width && vy > 0) {\r\n            let new_vx = vx;\r\n            let new_vy = -vy;\r\n            let { r, theta } = cartesianToPolar(new_vx, new_vy);\r\n            this.velocity.speed = r;\r\n            this.velocity.direction = theta;\r\n        }\r\n        if (y - this.size.width <= this.size.width && vy < 0) {\r\n            let new_vx = vx;\r\n            let new_vy = -vy;\r\n            let { r, theta } = cartesianToPolar(new_vx, new_vy);\r\n            this.velocity.speed = r;\r\n            this.velocity.direction = theta;\r\n        }\r\n    }\r\n    /**\r\n     *  draws the the firefly onto the canvas\r\n     * @param {Object} standard canvas2d context\r\n     */\r\n    draw(context) {\r\n        let { x, y } = this.position;\r\n        let { width, height } = this.size;\r\n        context.beginPath();\r\n        context.globalAlpha = this.globalAlpha;\r\n        context.shadowBlur = 5;\r\n        context.shadowColor = this.color;\r\n        context.fillStyle = this.color;\r\n        context.arc(x, y, width, 0, Math.PI * 2, false);\r\n        context.fill();\r\n        context.closePath();\r\n    }\r\n    /**\r\n     * Changes the direction of the firefly.\r\n     * It turns the current velocity vector by some random amount ensuring the smooth walk simulation.\r\n     */\r\n    changeDirecton() {\r\n        let turnIndirection = getRandomInt(-1, 1); //left , straight ,right\r\n        if (this.changeDirectionFrequency && this.stepCounter == this.changeDirectionFrequency) {\r\n            this.velocity.direction += turnIndirection * this.directionTurner.direction;\r\n            this.velocity.direction = inBound(this.velocity.direction);\r\n            this.stepCounter = 0; //reset the step counter to track when next it has change its direction\r\n        }\r\n    }\r\n}\n\n/**\r\n *standard function to implement the concept of throttling\r\n *if we move a mouse , every pixel we move it fires the mouse move event and in one 1second we would be moving too many pixels\r\n *which will inturn fire the mouse move event too many times which will produce too many particles at one time, which will\r\n *slow the rendering due to memory and runtime constraints of machine it is running on\r\n *so we need to deliberatly miss some mouse event fires\r\n *for example if in one move it fires the event 100 times we will only take 4-5 events thus improving the runtime rendering by lowering the number of particles generated\r\n *It also look visually appealing\r\n * @param {Function} func - the function argument tha need to throttled\r\n * @param {Number} limit - the allowed time limit\r\n * @returns {Function}  a function closure\r\n */\r\nconst throttle = (func, limit) => {\r\n    let lastFunc;\r\n    let lastRan;\r\n    return function () {\r\n        const context = this;\r\n        const args = arguments;\r\n        if (!lastRan) {\r\n            func.apply(context, args);\r\n            lastRan = Date.now();\r\n        }\r\n        else {\r\n            clearTimeout(lastFunc);\r\n            lastFunc = setTimeout(function () {\r\n                if (Date.now() - lastRan >= limit) {\r\n                    func.apply(context, args);\r\n                    lastRan = Date.now();\r\n                }\r\n            }, limit - (Date.now() - lastRan));\r\n        }\r\n    };\r\n};\n\n/**\r\n *  The single array data structure to store all fireflies.\r\n */\n\nvar fireflies = [];\n/**\r\n *  throtlled function , so that it smartly avoid redundant function call and hence avoid\r\n * to give birth so many fireflies in one mouse move or so.\r\n * @function\r\n */\n\nvar giveBirth = throttle(function (mouse, numberOfBirths, colors, changeDirectionFrequency, randomMotion) {\n  var x = mouse.x,\n      y = mouse.y;\n  if (x === null || y === null) return;\n\n  for (var i = 0; i < numberOfBirths; i++) {\n    var velocity = {\n      speed: getRandomInt(2, 3),\n      direction: getRandomInt(0, 360)\n    };\n    var color = colors[getRandomInt(0, colors.length)];\n    var directionTurner = {\n      magnitude: getRandomInt(1, 4),\n      direction: getRandomInt(5, 10)\n    };\n    var firefly = new Firefly({\n      x: x,\n      y: y\n    }, velocity, directionTurner, changeDirectionFrequency, color, null, null, randomMotion);\n    fireflies.push(firefly);\n  }\n}, 95);\n/**\r\n *  setting the correct cordinates where to generate the fireflies relative to the canvas\r\n * @function\r\n */\n\nvar setFromEvent = function setFromEvent(e, setMousePosition, boundary) {\n  setMousePosition({\n    x: e.clientX - boundary.current.x,\n    y: e.clientY - boundary.current.y\n  });\n};\n/**\r\n *  The main React component which orchastrates everything\r\n * from particle generatio, collision resolution to  animation and\r\n * painting canvas.\r\n */\n\n\nvar ReactFirefly = function ReactFirefly(props) {\n  var numberOfBirths = 2;\n  var canvasWidth = props.canvasWidth,\n      canvasHeight = props.canvasHeight,\n      colors = props.colors,\n      className = props.className;\n  var changeDirectionFrequency = 20;\n  var randomMotion = true;\n\n  if (!colors || colors.length == 0) {\n    colors = [\"#f15bb5\", \"#f72585\"];\n  }\n\n  var canvas = useRef();\n  var context = useRef(null);\n  var requestRef = useRef(0);\n  var boundary = useRef({\n    x: 0,\n    y: 0,\n    width: canvasWidth,\n    height: canvasHeight\n  });\n\n  var _useState = useState({\n    x: 0,\n    y: 0\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      mousePosition = _useState2[0],\n      setMousePosition = _useState2[1];\n\n  useEffect(function () {\n    init();\n    animate();\n    return function () {\n      cancelAnimationFrame(requestRef.current);\n      canvas.current.removeEventListener(\"mousemove\", function (e) {\n        return setFromEvent(e, setMousePosition, boundary);\n      });\n      canvas.current.addEventListener(\"mousemove\", function (e) {\n        return setFromEvent(e, setMousePosition, boundary);\n      });\n      window.removeEventListener(\"scroll\", setBoundary);\n    };\n  }, []);\n  useEffect(function () {\n    resizeCanvas();\n    setBoundary();\n  }, [props]);\n  useEffect(function () {\n    giveBirth(mousePosition, numberOfBirths, colors, changeDirectionFrequency, randomMotion);\n  }, [mousePosition]);\n  /**\r\n  *  This function initilizes the whole state of the project\r\n  * including canvas context to initial give firefly generations.\r\n  * @function\r\n  */\n\n  var init = function init() {\n    resizeCanvas();\n    context.current = canvas.current.getContext(\"2d\");\n    setBoundary();\n    giveBirth({\n      x: canvasWidth / 2,\n      y: canvasHeight / 2 - 25\n    }, 25, colors, changeDirectionFrequency, randomMotion);\n    canvas.current.addEventListener(\"mousemove\", function (e) {\n      return setFromEvent(e, setMousePosition, boundary);\n    });\n    window.addEventListener(\"scroll\", setBoundary);\n  };\n  /**\r\n  *  wrapper function to just resize the canvas dimension\r\n  * @function\r\n  */\n\n\n  var resizeCanvas = function resizeCanvas() {\n    canvas.current.width = canvasWidth;\n    canvas.current.height = canvasHeight;\n  };\n  /**\r\n  *  whenever user resizes the canvas in the application this handler\r\n  * takes care of new boundary of the canvas and updates accordinglyß\r\n  * @function\r\n  */\n\n\n  var setBoundary = function setBoundary() {\n    var rect = canvas.current.getBoundingClientRect();\n    var x = rect.left;\n    var y = rect.top;\n    boundary.current.x = x;\n    boundary.current.y = y;\n    boundary.current.width = canvasWidth;\n    boundary.current.height = canvasHeight;\n  };\n  /**\r\n  *  This is animation engine of the whole project\r\n  * it updates position of every firefly and is\r\n  * also responsible for painting to the canvas\r\n  * @function\r\n  */\n\n\n  var animate = function animate() {\n    requestRef.current = requestAnimationFrame(animate);\n    context.current.clearRect(0, 0, canvasWidth, canvasHeight);\n\n    for (var i = 0; i < fireflies.length; i++) {\n      fireflies[i].update(boundary.current);\n      fireflies[i].draw(context.current);\n\n      if (fireflies[i].globalAlpha < 0.01) {\n        fireflies.splice(i, 1); //remove the dead firefly from array\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Canvas, {\n    canvasRef: canvas,\n    className: className\n  });\n};\n\nexport default ReactFirefly;\n"]},"metadata":{},"sourceType":"module"}